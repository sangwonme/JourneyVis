{"ast":null,"code":"var _jsxFileName = \"/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeChart = ({\n  data\n}) => {\n  _s();\n  const d3Container = useRef(null);\n  useEffect(() => {\n    if (data && d3Container.current) {\n      // Set the dimensions and margins of the diagram\n      const margin = {\n        top: 20,\n        right: 90,\n        bottom: 30,\n        left: 90\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      // Remove any previous SVG\n      d3.select(d3Container.current).selectAll(\"*\").remove();\n\n      // Append the svg object to the container\n      const svg = d3.select(d3Container.current).append(\"svg\").attr(\"width\", width + margin.right + margin.left).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      // Create a tree layout\n      const treemap = d3.tree().size([height, width]);\n\n      // Assigns parent, children, height, depth\n      let root = d3.hierarchy(data, function (d) {\n        return d.children;\n      });\n      root.x0 = height / 2;\n      root.y0 = 0;\n\n      // Collapse after the second level\n      root.children.forEach(collapse);\n      update(root);\n      function collapse(d) {\n        if (d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n      function update(source) {\n        const treeData = treemap(root);\n        const nodes = treeData.descendants();\n        const links = treeData.descendants().slice(1);\n\n        // Normalize for fixed-depth.\n        nodes.forEach(function (d) {\n          d.y = d.depth * 180;\n        });\n        const node = svg.selectAll('g.node').data(nodes, function (d) {\n          return d.id || (d.id = ++i);\n        });\n        const nodeEnter = node.enter().append('g').attr('class', 'node').attr(\"transform\", function (d) {\n          return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n        }).on('click', click);\n        const rectHeight = 60,\n          rectWidth = 120;\n        nodeEnter.append('rect').attr('class', 'node').attr(\"width\", rectWidth).attr(\"height\", rectHeight).attr(\"x\", 0).attr(\"y\", rectHeight / 2 * -1).attr(\"rx\", \"5\").style(\"fill\", function (d) {\n          return d.data.fill;\n        });\n        nodeEnter.append('text').attr(\"dy\", \"-.35em\").attr(\"x\", 13).attr(\"text-anchor\", \"start\").text(function (d) {\n          return d.data.name;\n        }).append(\"tspan\").attr(\"dy\", \"1.75em\").attr(\"x\", 13).text(function (d) {\n          return d.data.subname;\n        });\n        const nodeUpdate = nodeEnter.merge(node);\n        nodeUpdate.transition().duration(750).attr(\"transform\", function (d) {\n          return \"translate(\" + d.y + \",\" + d.x + \")\";\n        });\n        const nodeExit = node.exit().transition().duration(750).attr(\"transform\", function (d) {\n          return \"translate(\" + source.y + \",\" + source.x + \")\";\n        }).remove();\n        const link = svg.selectAll('path.link').data(links, function (d) {\n          return d.id;\n        });\n        const linkEnter = link.enter().insert('path', \"g\").attr(\"class\", \"link\").attr('d', function (d) {\n          const o = {\n            x: source.x0,\n            y: source.y0\n          };\n          return diagonal(o, o);\n        });\n        const linkUpdate = linkEnter.merge(link);\n        linkUpdate.transition().duration(750).attr('d', function (d) {\n          return diagonal(d, d.parent);\n        });\n        link.exit().transition().duration(750).attr('d', function (d) {\n          const o = {\n            x: source.x,\n            y: source.y\n          };\n          return diagonal(o, o);\n        }).remove();\n        nodes.forEach(function (d) {\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n        function diagonal(s, d) {\n          return `M ${s.y} ${s.x}\n                  C ${(s.y + d.y) / 2} ${s.x},\n                    ${(s.y + d.y) / 2} ${d.x},\n                    ${d.y} ${d.x}`;\n        }\n        function click(d) {\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n          } else {\n            d.children = d._children;\n            d._children = null;\n          }\n          update(d);\n        }\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 10\n  }, this);\n};\n_s(TreeChart, \"W4i3Ntv1V7JhLIB1f9IS/+wu8BI=\");\n_c = TreeChart;\nexport default TreeChart;\nvar _c;\n$RefreshReg$(_c, \"TreeChart\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","TreeChart","data","_s","d3Container","current","margin","top","right","bottom","left","width","height","select","selectAll","remove","svg","append","attr","treemap","tree","size","root","hierarchy","d","children","x0","y0","forEach","collapse","update","_children","source","treeData","nodes","descendants","links","slice","y","depth","node","id","i","nodeEnter","enter","on","click","rectHeight","rectWidth","style","fill","text","name","subname","nodeUpdate","merge","transition","duration","x","nodeExit","exit","link","linkEnter","insert","o","diagonal","linkUpdate","parent","s","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst TreeChart = ({ data }) => {\n  const d3Container = useRef(null);\n\n  useEffect(() => {\n    if (data && d3Container.current) {\n      // Set the dimensions and margins of the diagram\n      const margin = { top: 20, right: 90, bottom: 30, left: 90 };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      // Remove any previous SVG\n      d3.select(d3Container.current).selectAll(\"*\").remove();\n\n      // Append the svg object to the container\n      const svg = d3.select(d3Container.current).append(\"svg\")\n        .attr(\"width\", width + margin.right + margin.left)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      // Create a tree layout\n      const treemap = d3.tree().size([height, width]);\n\n      // Assigns parent, children, height, depth\n      let root = d3.hierarchy(data, function(d) { return d.children; });\n      root.x0 = height / 2;\n      root.y0 = 0;\n\n      // Collapse after the second level\n      root.children.forEach(collapse);\n\n      update(root);\n\n      function collapse(d) {\n        if(d.children) {\n          d._children = d.children\n          d._children.forEach(collapse)\n          d.children = null\n        }\n      }\n\n      function update(source) {\n\n        const treeData = treemap(root);\n        const nodes = treeData.descendants();\n        const links = treeData.descendants().slice(1);\n\n        // Normalize for fixed-depth.\n        nodes.forEach(function(d){ d.y = d.depth * 180});\n\n        const node = svg.selectAll('g.node')\n          .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n        const nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on('click', click);\n\n        const rectHeight = 60, rectWidth = 120;\n\n        nodeEnter.append('rect')\n          .attr('class', 'node')\n          .attr(\"width\", rectWidth)\n          .attr(\"height\", rectHeight)\n          .attr(\"x\", 0)\n          .attr(\"y\", (rectHeight / 2) * -1)\n          .attr(\"rx\", \"5\")\n          .style(\"fill\", function(d) {\n              return d.data.fill;\n          });\n\n        nodeEnter.append('text')\n          .attr(\"dy\", \"-.35em\")\n          .attr(\"x\", 13)\n          .attr(\"text-anchor\", \"start\")\n          .text(function(d) { return d.data.name; })\n          .append(\"tspan\")\n          .attr(\"dy\", \"1.75em\")\n          .attr(\"x\", 13)\n          .text(function(d) { return d.data.subname; });\n\n        const nodeUpdate = nodeEnter.merge(node);\n\n        nodeUpdate.transition()\n          .duration(750)\n          .attr(\"transform\", function(d) { \n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n          });\n\n        const nodeExit = node.exit().transition()\n          .duration(750)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n        const link = svg.selectAll('path.link')\n          .data(links, function(d) { return d.id; });\n\n        const linkEnter = link.enter().insert('path', \"g\")\n          .attr(\"class\", \"link\")\n          .attr('d', function(d){\n            const o = {x: source.x0, y: source.y0};\n            return diagonal(o, o);\n          });\n\n        const linkUpdate = linkEnter.merge(link);\n\n        linkUpdate.transition()\n          .duration(750)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n        link.exit().transition()\n          .duration(750)\n          .attr('d', function(d) {\n            const o = {x: source.x, y: source.y};\n            return diagonal(o, o);\n          })\n          .remove();\n\n        nodes.forEach(function(d){\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n\n        function diagonal(s, d) {\n          return `M ${s.y} ${s.x}\n                  C ${(s.y + d.y) / 2} ${s.x},\n                    ${(s.y + d.y) / 2} ${d.x},\n                    ${d.y} ${d.x}`;\n        }\n\n        function click(d) {\n          if (d.children) {\n              d._children = d.children;\n              d.children = null;\n            } else {\n              d.children = d._children;\n              d._children = null;\n            }\n          update(d);\n        }\n      }\n\n    }\n  }, [data]);\n\n  return <svg ref={d3Container} />;\n};\n\nexport default TreeChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}