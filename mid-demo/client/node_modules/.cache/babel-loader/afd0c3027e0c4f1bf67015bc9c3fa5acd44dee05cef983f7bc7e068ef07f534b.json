{"ast":null,"code":"var _jsxFileName = \"/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"../data/treeData.json\";\nimport { useCenteredTree } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderForeignObjectNode = ({\n  nodeDatum,\n  toggleNode,\n  foreignObjectProps\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  children: /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n    ...foreignObjectProps,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        backgroundColor: \"#dedede\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: nodeDatum.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), nodeDatum.children && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"100%\"\n        },\n        onClick: toggleNode,\n        children: nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\nconst customPathFunction = (linkDatum, orientation) => {\n  const {\n    source,\n    target\n  } = linkDatum;\n  return orientation === 'horizontal' ? `M${source.y},${source.x}\n       C${source.y * (1 / 2) + target.y * (1 / 2)},${source.x}  \n        ${source.y * (1 / 2) + target.y * (1 / 2)},${target.x}  \n        ${target.y},${target.x}` : `M${source.x},${source.y}L${target.x},${target.y}`;\n};\nconst TreeChart = props => {\n  _s();\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = {\n    x: 1000,\n    y: 500\n  };\n  const foreignObjectProps = {\n    width: 200,\n    height: nodeSize.y,\n    x: -100\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: orgChartJson,\n      translate: translate,\n      nodeSize: nodeSize,\n      renderCustomNodeElement: rd3tProps => renderForeignObjectNode({\n        ...rd3tProps,\n        foreignObjectProps\n      }),\n      pathFunc: linkData => customPathFunction(linkData, 'horizontal'),\n      orientation: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(TreeChart, \"9B25YRDZ5t4fkTB737Vl0GrOdiQ=\", false, function () {\n  return [useCenteredTree];\n});\n_c = TreeChart;\nexport default TreeChart;\nvar _c;\n$RefreshReg$(_c, \"TreeChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Tree","orgChartJson","useCenteredTree","jsxDEV","_jsxDEV","renderForeignObjectNode","nodeDatum","toggleNode","foreignObjectProps","children","style","border","backgroundColor","textAlign","name","fileName","_jsxFileName","lineNumber","columnNumber","width","onClick","__rd3t","collapsed","customPathFunction","linkDatum","orientation","source","target","y","x","TreeChart","props","_s","translate","containerRef","nodeSize","height","ref","data","renderCustomNodeElement","rd3tProps","pathFunc","linkData","_c","$RefreshReg$"],"sources":["/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"../data/treeData.json\";\nimport { useCenteredTree } from \"../helpers\";\n\nconst renderForeignObjectNode = ({\n  nodeDatum,\n  toggleNode,\n  foreignObjectProps\n}) => (\n  <g>\n    <foreignObject {...foreignObjectProps}>\n      <div style={{ border: \"1px solid black\", backgroundColor: \"#dedede\" }}>\n        <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name}</h3>\n        {nodeDatum.children && (\n          <button style={{ width: \"100%\" }} onClick={toggleNode}>\n            {nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"}\n          </button>\n        )}\n      </div>\n    </foreignObject>\n  </g>\n);\n\nconst customPathFunction = (linkDatum, orientation) => {\n  const { source, target } = linkDatum;\n  return orientation === 'horizontal'\n    ? `M${source.y},${source.x}\n       C${source.y*(1/2)+target.y*(1/2)},${source.x}  \n        ${source.y*(1/2)+target.y*(1/2)},${target.x}  \n        ${target.y},${target.x}`\n    : `M${source.x},${source.y}L${target.x},${target.y}`;\n};\n\nconst TreeChart = (props) => {\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = { x: 1000, y: 500 };\n  const foreignObjectProps = { width: 200, height: nodeSize.y, x:-100};\n\n\treturn (\n\t\t<div ref={containerRef}>\n    <Tree\n        data={orgChartJson}\n        translate={translate}\n        nodeSize={nodeSize}\n        renderCustomNodeElement={(rd3tProps) =>\n          renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n        }\n        pathFunc={(linkData) => customPathFunction(linkData, 'horizontal')}\n        orientation=\"horizontal\"\n      />\n    </div>\n\t);\n};\n\nexport default TreeChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}