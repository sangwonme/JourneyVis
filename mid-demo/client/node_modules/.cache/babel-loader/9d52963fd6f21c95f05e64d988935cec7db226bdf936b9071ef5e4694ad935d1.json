{"ast":null,"code":"var _jsxFileName = \"/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChartRelated/TreeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport actionTree from \"../../data/actionTree.json\";\nimport { useCenteredTree } from \"../../helpers\";\nimport ActionNode from \"./ActionNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawPath = (linkDatum, foreignObjectProps) => {\n  const {\n    source,\n    target\n  } = linkDatum;\n  const sx = source.x - foreignObjectProps.height / 2 + 50;\n  const sy = source.y + foreignObjectProps.width / 200 + 50;\n  const ex = target.x - foreignObjectProps.height / 2 + 50;\n  const ey = target.y - foreignObjectProps.width / 200 - 50;\n  return `M${sy},${sx}\n       C${sy * (1 / 2) + ey * (1 / 2)},${sx}  \n        ${sy * (1 / 2) + ey * (1 / 2)},${ex}  \n        ${ey},${ex}`;\n};\nconst TreeChart = props => {\n  _s();\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = {\n    x: 400,\n    y: 400\n  };\n  const customNodeSize = {\n    x: 400,\n    y: 400\n  };\n  const foreignObjectProps = {\n    width: customNodeSize.x,\n    height: customNodeSize.y,\n    x: -customNodeSize.x / 2,\n    y: -customNodeSize.y / 2\n  };\n  const setSelectedAction = props.setSelectedAction;\n  let selectedQuery = props.selectedQuery;\n  useEffect(() => {\n    selectedQuery = props.selectedQuery;\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"treeChartContainer\",\n    children: selectedQuery != null && /*#__PURE__*/_jsxDEV(Tree, {\n      data: actionTree[selectedQuery],\n      translate: translate,\n      nodeSize: nodeSize,\n      zoomable: true,\n      renderCustomNodeElement: rd3tProps => {\n        return ActionNode({\n          ...rd3tProps,\n          foreignObjectProps\n        });\n      },\n      pathFunc: linkData => drawPath(linkData, foreignObjectProps),\n      orientation: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_s(TreeChart, \"Fn/PGHj06xjepdbVKrhj6hxcnYI=\", false, function () {\n  return [useCenteredTree];\n});\n_c = TreeChart;\nexport default TreeChart;\nvar _c;\n$RefreshReg$(_c, \"TreeChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Tree","actionTree","useCenteredTree","ActionNode","jsxDEV","_jsxDEV","drawPath","linkDatum","foreignObjectProps","source","target","sx","x","height","sy","y","width","ex","ey","TreeChart","props","_s","translate","containerRef","nodeSize","customNodeSize","setSelectedAction","selectedQuery","ref","className","children","data","zoomable","renderCustomNodeElement","rd3tProps","pathFunc","linkData","orientation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChartRelated/TreeChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport Tree from \"react-d3-tree\";\nimport actionTree from \"../../data/actionTree.json\";\nimport { useCenteredTree } from \"../../helpers\";\nimport ActionNode from \"./ActionNode\";\n\nconst drawPath = (linkDatum, foreignObjectProps) => {\n  const { source, target } = linkDatum;\n  const sx = source.x - foreignObjectProps.height/2 + 50\n  const sy = source.y + foreignObjectProps.width/200 + 50\n  const ex = target.x - foreignObjectProps.height/2 + 50\n  const ey = target.y - foreignObjectProps.width/200 - 50\n  return `M${sy},${sx}\n       C${sy*(1/2)+ey*(1/2)},${sx}  \n        ${sy*(1/2)+ey*(1/2)},${ex}  \n        ${ey},${ex}`;\n};\n\n\nconst TreeChart = (props) => {\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = { x: 400, y: 400 };\n  const customNodeSize = { x: 400, y: 400}\n  const foreignObjectProps = { \n                                width: customNodeSize.x, \n                                height: customNodeSize.y,\n                                x: -customNodeSize.x/2,\n                                y: -customNodeSize.y/2\n                              };\n\n  const setSelectedAction = props.setSelectedAction;\n  let selectedQuery = props.selectedQuery;\n  useEffect(() => {\n    selectedQuery = props.selectedQuery;\n  }, [props]);\n  \n\n\treturn (\n\t\t<div ref={containerRef} className=\"treeChartContainer\">\n      {\n      (selectedQuery != null) &&   \n      <Tree\n          data={actionTree[selectedQuery]}\n          translate={translate}\n          nodeSize={nodeSize}\n          zoomable={true}\n          renderCustomNodeElement={(rd3tProps) =>{\n            return ActionNode({ ...rd3tProps, foreignObjectProps })\n          }\n          }\n          pathFunc={(linkData) => drawPath(linkData, foreignObjectProps)}\n          orientation=\"horizontal\"\n        />\n      }\n    </div>\n\t);\n};\n\nexport default TreeChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}