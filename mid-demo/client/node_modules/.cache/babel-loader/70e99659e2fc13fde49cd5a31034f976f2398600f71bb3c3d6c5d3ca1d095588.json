{"ast":null,"code":"var _jsxFileName = \"/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChartRelated/TreeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"../../data/actionTree.json\";\nimport { useCenteredTree } from \"../../helpers\";\nimport ActionNode from \"./ActionNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\nconst drawPath = (linkDatum, foreignObjectProps) => {\n  const {\n    source,\n    target\n  } = linkDatum;\n  const sx = source.x;\n  const sy = source.y + foreignObjectProps.width / 2;\n  const ex = target.x;\n  const ey = target.y - foreignObjectProps.width / 2;\n  return `M${sy},${sx}\n       C${sy * (1 / 2) + ey * (1 / 2)},${sx}  \n        ${sy * (1 / 2) + ey * (1 / 2)},${ex}  \n        ${ey},${ex}`;\n};\nconst TreeChart = props => {\n  _s();\n  const containerRef = useRef();\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (containerRef.current) {\n      const dimensions = containerRef.current.getBoundingClientRect();\n      setTranslate({\n        x: dimensions.width / 2,\n        y: dimensions.height / 2\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: orgChartJson[2],\n      translate: translate,\n      nodeSize: nodeSize,\n      renderCustomNodeElement: rd3tProps => ActionNode({\n        ...rd3tProps,\n        foreignObjectProps\n      }),\n      pathFunc: linkData => drawPath(linkData, foreignObjectProps),\n      orientation: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// const TreeChart = (props) => {\n//   const [translate, containerRef] = useCenteredTree();\n//   const nodeSize = { x: 400, y: 400 };\n//   const customNodeSize = { x: 100, y: 100}\n//   const foreignObjectProps = { \n//                                 width: customNodeSize.x, \n//                                 height: customNodeSize.y,\n//                                 x: -customNodeSize.x/2,\n//                                 y: -customNodeSize.y/2\n//                               };\n\n// \treturn (\n// \t\t<div style={containerStyles} ref={containerRef}>\n//     <Tree\n//         data={orgChartJson[2]}\n//         translate={translate}\n//         nodeSize={nodeSize}\n//         renderCustomNodeElement={(rd3tProps) =>\n//           ActionNode({ ...rd3tProps, foreignObjectProps })\n//         }\n//         pathFunc={(linkData) => drawPath(linkData, foreignObjectProps)}\n//         orientation=\"horizontal\"\n//       />\n//     </div>\n// \t);\n// };\n_s(TreeChart, \"9K/DHdKogTJQsUyf+HZAjBKlA2s=\");\n_c = TreeChart;\nexport default TreeChart;\nvar _c;\n$RefreshReg$(_c, \"TreeChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Tree","orgChartJson","useCenteredTree","ActionNode","jsxDEV","_jsxDEV","containerStyles","width","height","drawPath","linkDatum","foreignObjectProps","source","target","sx","x","sy","y","ex","ey","TreeChart","props","_s","containerRef","translate","setTranslate","current","dimensions","getBoundingClientRect","style","ref","children","data","nodeSize","renderCustomNodeElement","rd3tProps","pathFunc","linkData","orientation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/components/TreeChartRelated/TreeChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"../../data/actionTree.json\";\nimport { useCenteredTree } from \"../../helpers\";\nimport ActionNode from \"./ActionNode\";\n\n\nconst containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\nconst drawPath = (linkDatum, foreignObjectProps) => {\n  const { source, target } = linkDatum;\n  const sx = source.x \n  const sy = source.y + foreignObjectProps.width/2\n  const ex = target.x \n  const ey = target.y - foreignObjectProps.width/2\n  return `M${sy},${sx}\n       C${sy*(1/2)+ey*(1/2)},${sx}  \n        ${sy*(1/2)+ey*(1/2)},${ex}  \n        ${ey},${ex}`;\n};\n\nconst TreeChart = (props) => {\n  const containerRef = useRef();\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const dimensions = containerRef.current.getBoundingClientRect();\n      setTranslate({\n        x: dimensions.width / 2,\n        y: dimensions.height / 2\n      });\n    }\n  }, []);\n\n  return (\n    <div style={containerStyles} ref={containerRef}>\n      <Tree\n        data={orgChartJson[2]}\n        translate={translate}\n        nodeSize={nodeSize}\n        renderCustomNodeElement={(rd3tProps) =>\n          ActionNode({ ...rd3tProps, foreignObjectProps })\n        }\n        pathFunc={(linkData) => drawPath(linkData, foreignObjectProps)}\n        orientation=\"horizontal\"\n      />\n    </div>\n  );\n};\n\n\n// const TreeChart = (props) => {\n//   const [translate, containerRef] = useCenteredTree();\n//   const nodeSize = { x: 400, y: 400 };\n//   const customNodeSize = { x: 100, y: 100}\n//   const foreignObjectProps = { \n//                                 width: customNodeSize.x, \n//                                 height: customNodeSize.y,\n//                                 x: -customNodeSize.x/2,\n//                                 y: -customNodeSize.y/2\n//                               };\n\n// \treturn (\n// \t\t<div style={containerStyles} ref={containerRef}>\n//     <Tree\n//         data={orgChartJson[2]}\n//         translate={translate}\n//         nodeSize={nodeSize}\n//         renderCustomNodeElement={(rd3tProps) =>\n//           ActionNode({ ...rd3tProps, foreignObjectProps })\n//         }\n//         pathFunc={(linkData) => drawPath(linkData, foreignObjectProps)}\n//         orientation=\"horizontal\"\n//       />\n//     </div>\n// \t);\n// };\n\nexport default TreeChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}