{"ast":null,"code":"var _jsxFileName = \"/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"./data/treeData.json\";\nimport { useCenteredTree } from \"./helpers\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\n// Here we're using `renderCustomNodeElement` render a component that uses\n// both SVG and HTML tags side-by-side.\n// This is made possible by `foreignObject`, which wraps the HTML tags to\n// allow for them to be injected into the SVG namespace.\nconst renderForeignObjectNode = ({\n  nodeDatum,\n  toggleNode,\n  foreignObjectProps\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    r: 15\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n    ...foreignObjectProps,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        backgroundColor: \"#dedede\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: nodeDatum.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), nodeDatum.children && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"100%\"\n        },\n        onClick: toggleNode,\n        children: nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\nexport default function App() {\n  _s();\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = {\n    x: 200,\n    y: 200\n  };\n  const foreignObjectProps = {\n    width: nodeSize.x,\n    height: nodeSize.y,\n    x: 20\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: orgChartJson,\n      nodeSize: nodeSize,\n      renderCustomNodeElement: rd3tProps => renderForeignObjectNode({\n        ...rd3tProps,\n        foreignObjectProps\n      }),\n      orientation: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9B25YRDZ5t4fkTB737Vl0GrOdiQ=\", false, function () {\n  return [useCenteredTree];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Tree","orgChartJson","useCenteredTree","jsxDEV","_jsxDEV","containerStyles","width","height","renderForeignObjectNode","nodeDatum","toggleNode","foreignObjectProps","children","r","fileName","_jsxFileName","lineNumber","columnNumber","style","border","backgroundColor","textAlign","name","onClick","__rd3t","collapsed","App","_s","translate","containerRef","nodeSize","x","y","ref","data","renderCustomNodeElement","rd3tProps","orientation","_c","$RefreshReg$"],"sources":["/Users/sangwon/Desktop/Github-Repos/JourneyVis/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport orgChartJson from \"./data/treeData.json\";\nimport { useCenteredTree } from \"./helpers\";\nimport \"./App.css\";\n\nconst containerStyles = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\n// Here we're using `renderCustomNodeElement` render a component that uses\n// both SVG and HTML tags side-by-side.\n// This is made possible by `foreignObject`, which wraps the HTML tags to\n// allow for them to be injected into the SVG namespace.\nconst renderForeignObjectNode = ({\n  nodeDatum,\n  toggleNode,\n  foreignObjectProps\n}) => (\n  <g>\n    <circle r={15}></circle>\n    {/* `foreignObject` requires width & height to be explicitly set. */}\n    <foreignObject {...foreignObjectProps}>\n      <div style={{ border: \"1px solid black\", backgroundColor: \"#dedede\" }}>\n        <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name}</h3>\n        {nodeDatum.children && (\n          <button style={{ width: \"100%\" }} onClick={toggleNode}>\n            {nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"}\n          </button>\n        )}\n      </div>\n    </foreignObject>\n  </g>\n);\n\nexport default function App() {\n  const [translate, containerRef] = useCenteredTree();\n  const nodeSize = { x: 200, y: 200 };\n  const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: 20 };\n  return (\n    <div style={containerStyles} ref={containerRef}>\n      <Tree\n        data={orgChartJson}\n        nodeSize={nodeSize}\n        renderCustomNodeElement={(rd3tProps) =>\n          renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n        }\n        orientation=\"horizontal\"\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGA,CAAC;EAC/BC,SAAS;EACTC,UAAU;EACVC;AACF,CAAC,kBACCP,OAAA;EAAAQ,QAAA,gBACER,OAAA;IAAQS,CAAC,EAAE;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC,eAExBb,OAAA;IAAA,GAAmBO,kBAAkB;IAAAC,QAAA,eACnCR,OAAA;MAAKc,KAAK,EAAE;QAAEC,MAAM,EAAE,iBAAiB;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAR,QAAA,gBACpER,OAAA;QAAIc,KAAK,EAAE;UAAEG,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAAEH,SAAS,CAACa;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACxDR,SAAS,CAACG,QAAQ,iBACjBR,OAAA;QAAQc,KAAK,EAAE;UAAEZ,KAAK,EAAE;QAAO,CAAE;QAACiB,OAAO,EAAEb,UAAW;QAAAE,QAAA,EACnDH,SAAS,CAACe,MAAM,CAACC,SAAS,GAAG,QAAQ,GAAG;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACf,CACJ;AAED,eAAe,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,eAAe,CAAC,CAAC;EACnD,MAAM4B,QAAQ,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EACnC,MAAMrB,kBAAkB,GAAG;IAAEL,KAAK,EAAEwB,QAAQ,CAACC,CAAC;IAAExB,MAAM,EAAEuB,QAAQ,CAACE,CAAC;IAAED,CAAC,EAAE;EAAG,CAAC;EAC3E,oBACE3B,OAAA;IAAKc,KAAK,EAAEb,eAAgB;IAAC4B,GAAG,EAAEJ,YAAa;IAAAjB,QAAA,eAC7CR,OAAA,CAACJ,IAAI;MACHkC,IAAI,EAAEjC,YAAa;MACnB6B,QAAQ,EAAEA,QAAS;MACnBK,uBAAuB,EAAGC,SAAS,IACjC5B,uBAAuB,CAAC;QAAE,GAAG4B,SAAS;QAAEzB;MAAmB,CAAC,CAC7D;MACD0B,WAAW,EAAC;IAAY;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACU,EAAA,CAhBuBD,GAAG;EAAA,QACSxB,eAAe;AAAA;AAAAoC,EAAA,GAD3BZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}